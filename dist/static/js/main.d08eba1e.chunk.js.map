{"version":3,"sources":["store/reducess/authreducer.js","store/reducess/projectreducer.js","store/actions/authactions.js","components/layout/Signinlink.js","components/layout/signoutlink.js","components/layout/navbar.js","components/layout/dashbord/notification.js","components/Projects/projectsummary.js","components/Projects/projectlist.js","components/layout/dashbord/dashbord.js","components/Projects/projectdetails.js","components/auth/signin.js","components/auth/signup.js","store/actions/projectaction.js","components/Projects/CreateProject.js","App.js","serviceWorker.js","store/reducess/rootreducer.js","config/fbconfig.js","index.js"],"names":["initstate","authError","authReducer","state","action","type","console","log","err","message","projects","id","idea","description","projectReducer","project","signIn","Credentails","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","catch","connect","signOut","props","className","to","onClick","profile","initials","Signoutlink","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","authorFirstName","authorLastName","createdAt","calendar","ProjectList","Dashbord","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","pro","undefined","SignIN","handlechange","e","setState","target","value","handlesubmit","preventDefault","onSubmit","htmlFor","onChange","creds","SignUp","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","userFirstName","userLastName","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","Projectdetails","Boolean","window","location","hostname","rootReducer","combineReducers","require","default","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d08eba1e.chunk.js","sourcesContent":["const initstate={\r\n    authError:null\r\n}\r\nconst authReducer =(state=initstate,action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed');\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n            \r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'LOGOUT':\r\n            console.log('Logout successful');\r\n            return state\r\n        case 'SIGNUP_S':\r\n            console.log('Sign up success')\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERR':\r\n            console.log(\"Failed signup\")\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","const initstate={\r\n    projects: [\r\n        {id: '1', idea: 'help me find peach', description: 'blah blah blah'},\r\n        {id: '2', idea: 'collect all the stars', description: 'blah blah blah'},\r\n        {id: '3', idea: 'egg hunt with yoshi', description: 'blah blah blah'}\r\n      ]\r\n    }\r\nconst projectReducer =(state=initstate,action)=>{\r\n  switch(action.type)\r\n  {\r\n    case 'CREATE_PROJECT':\r\n      console.log(\"project created\", action.project)\r\n      return state\r\n    case 'CREATE_ERROR':\r\n      console.log(\"create error\",action.err)\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import { getFirestore } from \"redux-firestore\";\r\n\r\nconst signIn =(Credentails)=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n      const firebase=getFirebase()\r\n\r\n      firebase.auth().signInWithEmailAndPassword(\r\n          Credentails.email,\r\n          Credentails.password\r\n      ).then(()=>{\r\n          dispatch({type:'LOGIN_SUCCESS'});\r\n      }).catch((err)=>{\r\n          dispatch({type:'LOGIN_ERROR',err});\r\n      });\r\n    }\r\n}\r\nexport const signOut=()=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase()\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'LOGOUT'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp=(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase=getFirebase()\r\n        const firestore=getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            firestore.collection('users').doc(resp.user.uid).set({\r\n                userFirstName:newUser.firstname,\r\n                userLastName:newUser.lastname,\r\n                initials:newUser.firstname[0]+newUser.lastname[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_S'} )\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERR',err})\r\n        })\r\n    }\r\n}\r\nexport default signIn;","import React, { useLayoutEffect } from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authactions\";\r\nconst Signinlink = (props)=>{\r\n    return(\r\n       < ul className=\"right\">\r\n           <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n\r\n           <li><a onClick={props.signOut}>Sign Out</a></li>\r\n\r\n           <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n          </NavLink></li>\r\n          </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signOut:()=>dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Signinlink);","import React, { useLayoutEffect } from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\nconst Signoutlink = ()=>{\r\n    return(\r\n       <ul  className=\"right\">\r\n           <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n\r\n           <li><NavLink to=\"/signin\">Sign In</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default Signoutlink;","import React from \"react\";\r\nimport {Link , NavLink} from 'react-router-dom';\r\nimport Signinlink from \"./Signinlink\";\r\nimport Signoutlink from \"./signoutlink\";\r\nimport { useLayoutEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nconst Navbar = (props)=>{\r\n  const {auth,profile}=props\r\n  const links= !auth.uid?<Signoutlink />:<Signinlink profile={profile}/>\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n          <div className=\"container\">\r\n            <NavLink to=\"/\" className=\"brand-logo hide-on-med-and-down\">ProjectPlan</NavLink>\r\n             { auth.isLoaded&&links }\r\n            </div>\r\n        </nav>\r\n        \r\n        \r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  console.log(state);\r\n  return{\r\n     auth:state.firebase.auth,\r\n     profile:state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\nconst Notifications = (props)=>{\r\n    const {notifications}=props\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                  <span className=\"card-title\">Notifications</span>\r\n                  <ul className=\"notifications\">\r\n                  {notifications && notifications.map(item =>{\r\n                      return(\r\n                          <li key={item.id}>\r\n                              <span className=\"pink-text\">{item.user} </span>\r\n                              <span>{item.content} </span>\r\n                               <div className=\"grey-text\">\r\n                                   {moment(item.time.toDate()).fromNow()}\r\n                               </div>\r\n                          </li>\r\n\r\n\r\n                      )\r\n                  })}\r\n                  </ul>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            < div className=\"card-content grey-text text-darken-4\"> \r\n             <span className=\"card-title\">{project.idea}</span>\r\n            <p>posted by {project.authorFirstName} {project.authorLastName}  </p>\r\n            <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './projectsummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects})=>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n         {projects && projects.map(project =>{\r\n             return(\r\n                 <Link to={'/projects/' + project.id}> \r\n         <ProjectSummary project={project} key={project.id} />\r\n         </Link>\r\n             )\r\n         })\r\n         }\r\n       </div>\r\n\r\n    )\r\n}\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './notification';\r\nimport ProjectList from '../../Projects/projectlist';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass Dashbord extends Component{\r\n    render(){\r\n      const {projects,auth,notifications}=this.props\r\n      if(auth.uid && auth.isLoaded){\r\n        return(\r\n          <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n              <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications} />\r\n          </div>\r\n        \r\n        </div>\r\n        </div>\r\n     \r\n      )\r\n      } \r\n      else{return <Redirect to='/signin' />}\r\n\r\n        \r\n        }\r\n    }\r\n const mapStateToProps =(state)=>{\r\n   //console.log(state);\r\n     return {\r\n      projects:state.firestore.ordered.projects,\r\n      auth:state.firebase.auth,\r\n      notifications:state.firestore.ordered.notifications\r\n    }\r\n }\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection:'projects',orderBy:['createdAt','desc']},\r\n    {collection:'notifications', limit: 3, orderBy:['time','desc']}\r\n  ])\r\n)(Dashbord)","import React from 'react'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment'\r\nconst Projectdetails=(props)=> {\r\n    const id=props.match.params.id;\r\n     console.log(props)\r\n    const { pro ,auth }=props;\r\n    if(!auth.uid){ return <Redirect to='/signin' />}\r\n\r\n    if(pro === undefined){ return (\r\n        <h1>Not found</h1>\r\n    ) }\r\n   else if( pro )\r\n    {\r\n    return (\r\n        <div className=\"section container prject-details \">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                   <span className=\"card-title white\">{pro.idea} </span>\r\n                  <p>{pro.description}</p>\r\n\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <div>posted by { pro.authorFirstName}</div>\r\n                    <div>{moment(pro.createdAt.toDate()).calendar()} </div>\r\n                </div>\r\n              \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n    }\r\n    else{\r\n        return(\r\n       <div className=\"container center grey-text\">\r\n           <h1 className=\"white\">Project is loading please wait. ....... </h1>\r\n       </div>\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps= (state,ownProps)=>{\r\n    // console.log(state);\r\n    const id=ownProps.match.params.id;\r\n    const projects=state.firestore.data.projects;\r\n    const project=projects?projects[id]:null\r\n       return{\r\n        pro:project,\r\n        auth:state.firebase.auth\r\n   }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(Projectdetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport signIn from '../../store/actions/authactions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIN extends Component {\r\n    state={\r\n    email:'',\r\n    password:''\r\n    }\r\n    handlechange =(e)=>{\r\n        this.setState({\r\n       [e.target.id]:e.target.value\r\n    })\r\n}\r\n    handlesubmit = (e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError , auth }=this.props;\r\n        if(auth.uid&&auth.isLoaded)return <Redirect to='/' />\r\n        return (\r\n          <div className=\"container\">\r\n              <form onSubmit={this.handlesubmit} className=\"white\">\r\n                  <h4 className=\"grey-text \">Sign In</h4>\r\n                  <div className=\"input-field\">\r\n                 <label htmlFor=\"email\">Email</label>\r\n                 <input type=\"email\" id=\"email\" onChange={this.handlechange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                 <label htmlFor=\"password\">Password</label>\r\n                 <input type=\"password\" id=\"password\" onChange={this.handlechange} />\r\n                 </div>\r\n                 <button className=\"btn pink\">Sign In</button>\r\n                 <div className=\"red-text center\">\r\n                    { authError?<p>{authError}</p>:null}\r\n                 </div>\r\n              </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signIn:(creds)=>dispatch(signIn(creds))\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIN);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authactions'\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n    email:'',\r\n    password:'',\r\n    firstname:'',\r\n    lastname:''\r\n    }\r\n    handlechange =(e)=>{\r\n        this.setState({\r\n       [e.target.id]:e.target.value\r\n    })\r\n}\r\n    handlesubmit = (e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth,authError} = this.props\r\n        if(auth.uid)return <Redirect to='/' />\r\n        return (\r\n          <div className=\"container\">\r\n              <form onSubmit={this.handlesubmit} className=\"white\">\r\n                  <h4 className=\"grey-text \">Sign Up</h4>\r\n                  <div className=\"input-field\">\r\n                 <label htmlFor=\"firstname\">First-Name</label>\r\n                 <input type=\"text\" id=\"firstname\" onChange={this.handlechange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                 <label htmlFor=\"lastname\">Last-Name</label>\r\n                 <input type=\"text\" id=\"lastname\" onChange={this.handlechange} />\r\n                 </div>\r\n                  <div className=\"input-field\">\r\n                 <label htmlFor=\"email\">Email</label>\r\n                 <input type=\"email\" id=\"email\" onChange={this.handlechange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                 <label htmlFor=\"password\">Password</label>\r\n                 <input type=\"password\" id=\"password\" onChange={this.handlechange} />\r\n                 </div>\r\n                 <button className=\"btn pink\">Sign Up</button>\r\n                 {authError?<p className=\"red-text center\">{authError}</p>:null}\r\n\r\n              </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispathToProps=(dispatch)=>{\r\n    return{\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispathToProps)(SignUp);\r\n","import { getFirebase } from \"react-redux-firebase\";\r\nimport { getFirestore } from \"redux-firestore\";\r\n\r\n const createProject = (project) =>{\r\n  return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n    const authorId=getState().firebase.auth.uid\r\n    const firstname=getState().firebase.profile.userFirstName\r\n    const lastname=getState().firebase.profile.userLastName\r\n    const fb=getFirestore();\r\n    fb.collection('projects').add({\r\n      idea:project.idea,\r\n      description:project.description,\r\n      authorFirstName:firstname,\r\n      authorLastName:lastname,\r\n      authorId:authorId,\r\n      createdAt:new Date()\r\n    }).then(()=>{\r\n      dispatch({type:'CREATE_PROJECT',project});\r\n    }).catch((err)=>{\r\n      dispatch({type:'CREATE_ERROR',err});\r\n    })\r\n  }\r\n};\r\nexport default createProject;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport createProject from '../../store/actions/projectaction'\r\nimport { Redirect } from 'react-router-dom'\r\nclass CreateProject extends Component {\r\n    state={\r\n    idea:'',\r\n    description:''\r\n    }\r\n    handlechange =(e)=>{\r\n        this.setState({\r\n       [e.target.id]:e.target.value\r\n    })\r\n}\r\n    handlesubmit = (e)=>{\r\n        e.preventDefault();\r\n       // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth}=this.props\r\n        if(auth.uid)\r\n        {\r\n            return (\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handlesubmit} className=\"white\">\r\n                        <h4 className=\"grey-text \">Add New Idea</h4>\r\n                        <div className=\"input-field\">\r\n                       <label htmlFor=\"idea\">Project-Idea</label>\r\n                       <input type=\"text\" id=\"idea\" onChange={this.handlechange} />\r\n                       </div>\r\n                       <div className=\"input-field\">\r\n                       <label htmlFor=\"description\">Explain Idea</label>\r\n                       <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handlechange}></textarea>\r\n                       </div>\r\n                       <button className=\"btn pink\">Add</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        else{return <Redirect to='/signin' />}\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        createProject:(project)=>dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/navbar';\nimport Dashbord from './components/layout/dashbord/dashbord';\nimport Projectdetails from './components/Projects/projectdetails';\nimport SignIN from './components/auth/signin';\nimport SignUp from './components/auth/signup';\nimport CreateProject from './components/Projects/CreateProject';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n       <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashbord}></Route>\n          <Route path=\"/create\" component={CreateProject}></Route>\n          <Route path=\"/projects/:id\" component={Projectdetails}></Route>\n          <Route path=\"/signin\" component={SignIN}></Route>\n          <Route path=\"/signup\" component={SignUp}></Route>\n       </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst { combineReducers } = require(\"redux\");\r\nconst { default: authReducer } = require(\"./authreducer\");\r\nconst { default: projectReducer } = require(\"./projectreducer\");\r\n\r\nconst rootReducer=combineReducers({\r\n        auth:authReducer,\r\n        project:projectReducer,\r\n        firestore:firestoreReducer,\r\n        firebase:firebaseReducer\r\n        })\r\n\r\n\r\nexport default rootReducer;"," import firebase from 'firebase/app';\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBq2br0f2IYpDZLMZVYs2jUYKVq985Tf1w\",\r\n    authDomain: \"project-plan-aa009.firebaseapp.com\",\r\n    databaseURL: \"https://project-plan-aa009.firebaseio.com\",\r\n    projectId: \"project-plan-aa009\",\r\n    storageBucket: \"project-plan-aa009.appspot.com\",\r\n    messagingSenderId: \"617196615185\",\r\n    appId: \"1:617196615185:web:1655ca83505ef139f663b0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducess/rootreducer';\nimport thunk from 'redux-thunk';\nimport { getFirebase, ReactReduxFirebaseProvider} from 'react-redux-firebase';\nimport { getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore';\nimport fbconfig from './config/fbconfig';\nimport firebase from 'firebase/app';\nconst store= createStore(rootReducer,\n  compose(\n     applyMiddleware(thunk.withExtraArgument({ getFirebase , getFirestore})),\n  reduxFirestore(fbconfig)\n)\n);\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\nconst rrfProps = {\n  firebase,\n  config: fbconfig,\n  config:profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}